"""
Django settings for factura_sh project.

Generated by 'django-admin startproject' using Django 2.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '!*ndp-(t$)0cgpl!q4bh^t^o%&*z8!=&g-*e+bocov1h#5zsux'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['saboreshidalgo.pythonanywhere.com', '127.0.0.1']


# Application definition

DEFAULT_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.humanize',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

THIRD_PARTY_APPS = [
    'bootstrap_modal_forms',
    'crispy_forms',
    'crispy_bootstrap5',
    'django_bootstrap5',
    'django_cleanup',
    'formtools',
]

LOCAL_APPS = [
    'apps.base',
]

INSTALLED_APPS = DEFAULT_APPS + LOCAL_APPS + THIRD_PARTY_APPS


CRISPY_ALLOWED_TEMPLATE_PACKS = "facturash"

CRISPY_TEMPLATE_PACK = "facturash"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'apps.base.lockdown.LoginRequiredMiddleware',
]

ROOT_URLCONF = 'factura_sh.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR + '/templates/',],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                # 'social_django.context_processors.backends',  # <-- Here
                # 'social_django.context_processors.login_redirect', # <-- Here
            ],
            'libraries': {
                'custom_tags': 'apps.base.templatetags.custom_tags',
            },
            'builtins': ['django.templatetags.i18n']
        },
    },
]

AUTHENTICATION_BACKENDS = (
    # 'social_core.backends.facebook.FacebookOAuth2',
    # 'social_core.backends.twitter.TwitterOAuth',
    # 'social_core.backends.github.GithubOAuth2',

    'django.contrib.auth.backends.ModelBackend',
)

WSGI_APPLICATION = 'factura_sh.wsgi.application'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'facturash.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


AUTH_USER_MODEL = 'base.CustomUser'

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/


LANGUAGES = (
 ('en', _('English')),
 ('es', _('Spanish')),
)

LANGUAGE_CODE = 'es'
TIME_ZONE = 'America/Mexico_City'
USE_I18N = True
USE_L10N = True
USE_TZ = True


LOCALE_PATHS = (
    BASE_DIR + '/apps/base/locale', )


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
STATICFILES_DIRS = (     
os.path.join(BASE_DIR, 'static'), 
) 
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Media Files
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

try:
    from factura_sh.local_settings import *
except ImportError:
    pass


# This will print email in Console.
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

from django.contrib.messages import constants as messages

MESSAGE_TAGS = {
    messages.DEBUG: 'alert-info',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}


LOGIN_URL = 'CustomUser:login'
LOGIN_REDIRECT_URL = 'base:dashboard'
LOGIN_REQUIRED_URLS = (
        r'/(.*)/crm/(.*)$',
    )
LOGIN_REQUIRED_URLS_EXCEPTIONS = (
    r'/(.*)/crm/login(.*)$',
    r'/(.*)/crm/factura(.*)$',
)


# Meli App
MELI_CLIENT_ID = '8367847789338992'
MELI_CLIENT_SECRET = 'qhTLXZ37Rt9omHx3RllnYSnNKV9SPKsl'
MELI_REDIRECT_URI = 'https://saboreshidalgo.com/exit.html'

# Meli Api
MELI_SDK_VERSION = 'MELI-PYTHON-SDK-2.0.0'
MELI_API_ROOT_URL = 'https://api.mercadolibre.com'
MELI_AUTH_URL = 'https://auth.mercadolibre.com.mx'
MELI_OAUTH_URL = '/oauth/token'
MELI_SSL_VERSION = 'PROTOCOL_TLSv1'